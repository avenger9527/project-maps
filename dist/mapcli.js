var e=require("cac"),t=require("fs/promises"),s=require("path"),c=require("filesize");function r(e){return e&&e.__esModule?e.default:e}var a="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},o={},i={},n=a.parcelRequire0bdd;null==n&&((n=function(e){if(e in o)return o[e].exports;if(e in i){var t=i[e];delete i[e];var s={id:e,exports:{}};return o[e]=s,t.call(s.exports,s,s.exports),s.exports}var c=new Error("Cannot find module '"+e+"'");throw c.code="MODULE_NOT_FOUND",c}).register=function(e,t){i[e]=t},a.parcelRequire0bdd=n);const l={exclude:["node_modules"],relativepathDesc:{".git":{desc:"git workspace",collapsed:!0},".husky":{desc:"husky workspace",collapsed:!0},".vscode":{desc:"vscode config",collapsed:!0},dist:{desc:"",collapsed:!0},"yarn.lock":{desc:"yarn package lock file",collapsed:!0}}},p=async e=>{const c=r(s).relative(__dirname,__filename.replace(/mapcli\.js/g,"chart.js"));console.log("chartJsPath",c);const a=`\n  <!DOCTYPE html>\n  <html lang="en">\n    <head>\n      <meta charset="UTF-8" />\n      <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n      <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n      <title>Project-Maps</title>\n      <style>\n        * {\n          padding: 0;\n          margin: 0;\n        }\n      </style>\n    </head>\n    <body>\n      <div style="width: 100vw; height: 100vh; display: flex">\n        <div id="container" style="flex: 1"></div>\n      </div>\n      <script src="./projectMaps.tree.js"><\/script>\n      <script src="./${c}"><\/script>\n    </body>\n  </html>\n\n  `;try{await r(t).writeFile(r(s).resolve(e,"projectMaps.views.html"),a),console.log("write-projectMaps.views.html.js-success")}catch(e){console.error("write-projectMaps.views.html.js-error",e)}},d=async e=>{const c=u(),a=c?{exclude:[...new Set(c.exclude.concat(l.exclude))],relativepathDesc:[...new Set([...Object.keys(l.relativepathDesc),...Object.keys(c.relativepathDesc)])].reduce(((e,t)=>{var s,r;return e[t]=Object.assign({},null!==(s=c.relativepathDesc[t])&&void 0!==s?s:{},null!==(r=l.relativepathDesc[t])&&void 0!==r?r:{}),e}),{})}:l;try{await r(t).writeFile(r(s).resolve(e,"projectMaps.config.js"),"module.exports = "+JSON.stringify(a,null,2)),console.log("write-projectMaps.config.js-success")}catch(e){console.error("write-projectMaps.config.js-error",e)}};const u=()=>{try{return require(r(s).resolve(process.cwd(),"projectMaps.config.js"))}catch(e){return console.error("getUserConfig-error,use default config"),l}},h=async(e,a,o,i)=>{let n=await r(t).readdir(r(s).resolve(e));n=n.filter((e=>!a.exclude.includes(e))),await Promise.all(n.map((async n=>{var l,p;const d=r(s).resolve(e,n),u=r(s).relative(process.cwd(),d);var v;const g=null!==(v=null===(l=a.relativepathDesc[u])||void 0===l?void 0:l.desc)&&void 0!==v?v:"";var m;const w=null!==(m=null===(p=a.relativepathDesc[u])||void 0===p?void 0:p.collapsed)&&void 0!==m?m:"",y=await r(t).stat(d),j=y.isDirectory();var f;i[n]=function(e,t,s,c,r,a,o){const i={parentName:e,fullPath:t,relativePath:s,size:c,desc:r,collapsed:o};return a&&(i.children={}),i}(o,d,u,r(c)(y.size),g,j,w),j&&await h(d,a,n,null!==(f=i[n].children)&&void 0!==f?f:{})})))},v=async e=>{const c={},a=u();try{await h(e,a,"root",c),await r(t).writeFile(r(s).resolve(e,"projectMaps.tree.js"),"window.projectMapsTree = "+JSON.stringify(c,null,2)),console.log("write-projectMaps.tree.js-success")}catch(e){console.log("write-projectMaps.tree.js-error",e)}},g=e.cac("project-maps");g.command("init").action((async()=>{console.log("call-init",process.cwd());try{await d(process.cwd())}catch(e){process.exit(1)}})),g.command("tree").action((async()=>{console.log("call-tree");try{await v(process.cwd())}catch(e){process.exit(1)}})),g.command("generate").action((async()=>{console.log("call-generate");try{await p(process.cwd())}catch(e){process.exit(1)}})),g.command("map").action((async()=>{console.log("call-map");const e=process.cwd();try{await d(e),await v(e),await p(e)}catch(e){process.exit(1)}})),g.help(),n.register("4pejK",(function(e,t){e.exports=JSON.parse('{"name":"project-maps","version":"1.0.2","description":"visualize your project","bin":{"project-maps":"./bin/project-maps.js"},"files":["dist/"],"engines":{"node":">= 12"},"mapcli":"dist/mapcli.js","chart":"dist/chart.js","targets":{"mapcli":{"sourceMap":false,"source":"src/main.ts","engines":{"node":">= 12"}},"chart":{"sourceMap":false,"source":"src/chart.ts","engines":{"browsers":"> 0.5%, last 2 versions, not dead"}}},"scripts":{"build":"parcel build --no-cache","build:mapcli":"parcel build --target mapcli --no-cache","build:chart":"parcel build --target chart --no-cache"},"repository":{"type":"git","url":"https://github.com/toSayNothing/project-maps.git"},"keywords":["visualize","project","maps"],"author":"toSayNothing","license":"MIT","bugs":{"url":"https://github.com/toSayNothing/project-maps/issues"},"homepage":"https://github.com/toSayNothing/project-maps#readme","devDependencies":{"@parcel/packager-ts":"^2.0.1","@parcel/transformer-typescript-types":"^2.0.1","@types/node":"^17.0.4","parcel":"^2.0.1","typescript":">=3.0.0"},"dependencies":{"cac":"^6.7.12","chalk":"^5.0.0","echarts":"^5.2.2","filesize":"^8.0.6","vscode-icons-js":"^11.6.1"}}')})),g.version(n("4pejK").version),g.parse();