{"mappings":"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","sources":["src/constants.ts","src/initConfig.ts","src/main.ts","src/generateHtml.ts","package.json"],"sourcesContent":["export interface UserConfig {\r\n  /** exclude folder/file name */\r\n  exclude: string[];\r\n  relativepathDesc: {\r\n    [key: string]: {\r\n      desc: string;\r\n      collapsed: boolean;\r\n    };\r\n  };\r\n}\r\n\r\nexport const DEFAULT_CONFIG: UserConfig = {\r\n  exclude: [\"node_modules\"],\r\n  relativepathDesc: {\r\n    \".git\": {\r\n      desc: \"git workspace\",\r\n      collapsed: true,\r\n    },\r\n    \".husky\": {\r\n      desc: \"husky workspace\",\r\n      collapsed: true,\r\n    },\r\n    \".vscode\": {\r\n      desc: \"vscode config\",\r\n      collapsed: true,\r\n    },\r\n    dist: {\r\n      desc: \"\",\r\n      collapsed: true,\r\n    },\r\n    \"yarn.lock\": {\r\n      desc: \"yarn package lock file\",\r\n      collapsed: true,\r\n    },\r\n  },\r\n};\r\n\r\nexport const OUTPUT_CONFIG_FILENAME = \"projectMaps.config.js\";\r\nexport const OUTPUT_TREE_FILENAME = \"projectMaps.tree.js\";\r\nexport const OUTPUT_HTML_FILENAME = \"projectMaps.views.html\";\r\nexport const WINDOW_TREE_KEY = \"projectMapsTree\";\r\n","// this file has two missions:\r\n// 1. output default config for user\r\n// 2. get all folder tree data with config\r\n\r\nimport fs from \"fs/promises\";\r\nimport path from \"path\";\r\nimport fileSize from \"filesize\";\r\nimport {\r\n  DEFAULT_CONFIG,\r\n  OUTPUT_CONFIG_FILENAME,\r\n  OUTPUT_TREE_FILENAME,\r\n  UserConfig,\r\n  WINDOW_TREE_KEY,\r\n} from \"./constants\";\r\n\r\nexport interface TreeDataItem {\r\n  parentName: string;\r\n  fullPath: string;\r\n  relativePath: string;\r\n  size: string;\r\n  desc: string;\r\n  collapsed: boolean;\r\n  children?: {\r\n    [key: string]: TreeDataItem;\r\n  };\r\n}\r\n\r\n/** 1. output default config for user */\r\nexport const outputDefaultConfig = async (outputPath: string) => {\r\n  const oldUserConfig = getUserConfig();\r\n  // check old config file, then merge it\r\n  // console.log(\"oldUserConfig\", oldUserConfig);\r\n  const toWriteConfig: UserConfig = oldUserConfig\r\n    ? {\r\n        exclude: [\r\n          ...new Set(oldUserConfig.exclude.concat(DEFAULT_CONFIG.exclude)),\r\n        ],\r\n        // merge user desc and default desc\r\n        relativepathDesc: [\r\n          ...new Set([\r\n            ...Object.keys(DEFAULT_CONFIG.relativepathDesc),\r\n            ...Object.keys(oldUserConfig.relativepathDesc),\r\n          ]),\r\n        ].reduce<UserConfig[\"relativepathDesc\"]>((acc, cur) => {\r\n          acc[cur] = Object.assign(\r\n            {},\r\n            oldUserConfig.relativepathDesc[cur] ?? {},\r\n            DEFAULT_CONFIG.relativepathDesc[cur] ?? {}\r\n          );\r\n          return acc;\r\n        }, {}),\r\n      }\r\n    : DEFAULT_CONFIG;\r\n  try {\r\n    await fs.writeFile(\r\n      path.resolve(outputPath, OUTPUT_CONFIG_FILENAME),\r\n      `module.exports = ` + JSON.stringify(toWriteConfig, null, 2)\r\n    );\r\n    console.log(\"write-projectMaps.config.js-success\");\r\n  } catch (err) {\r\n    console.error(\"write-projectMaps.config.js-error\", err);\r\n  }\r\n};\r\n\r\nfunction makeTreeDataItem(\r\n  parentName: string,\r\n  fullPath: string,\r\n  relativePath: string,\r\n  size: string,\r\n  desc: string,\r\n  isDir: boolean,\r\n  collapsed: boolean\r\n) {\r\n  const obj: TreeDataItem = {\r\n    parentName,\r\n    fullPath,\r\n    relativePath,\r\n    size,\r\n    desc, // init to empty string\r\n    collapsed,\r\n  };\r\n  if (isDir) obj.children = {};\r\n  return obj;\r\n}\r\nconst getUserConfig = () => {\r\n  try {\r\n    const userConfig: typeof DEFAULT_CONFIG = require(path.resolve(\r\n      __dirname,\r\n      OUTPUT_CONFIG_FILENAME\r\n    ));\r\n    return userConfig;\r\n  } catch (error) {\r\n    console.error(\"getUserConfig-error,use default config\");\r\n    return DEFAULT_CONFIG;\r\n  }\r\n};\r\nconst searchPath = async (\r\n  pathName: string,\r\n  userConfig: typeof DEFAULT_CONFIG,\r\n  parentName: string,\r\n  obj: Record<string, TreeDataItem>\r\n) => {\r\n  let arr = await fs.readdir(path.resolve(pathName));\r\n  arr = arr.filter((fileName) => !userConfig.exclude.includes(fileName));\r\n  await Promise.all(\r\n    arr.map(async (fileName) => {\r\n      const fullFileName = path.resolve(pathName, fileName);\r\n      const curRelativePath = path.relative(__dirname, fullFileName);\r\n      const curDesc = userConfig.relativepathDesc[curRelativePath]?.desc ?? \"\";\r\n      const curCollapsed =\r\n        userConfig.relativepathDesc[curRelativePath]?.collapsed ?? \"\";\r\n      const stat = await fs.stat(fullFileName);\r\n      const isDir = stat.isDirectory();\r\n      obj[fileName] = makeTreeDataItem(\r\n        parentName,\r\n        fullFileName,\r\n        curRelativePath,\r\n        fileSize(stat.size),\r\n        curDesc,\r\n        isDir,\r\n        curCollapsed\r\n      );\r\n      if (isDir) {\r\n        await searchPath(\r\n          fullFileName,\r\n          userConfig,\r\n          fileName,\r\n          obj[fileName].children ?? {}\r\n        );\r\n      }\r\n    })\r\n  );\r\n};\r\n\r\n/** 2. get all folder tree data */\r\nexport const getUserFolderMaps = async (rootPath: string) => {\r\n  const treeObj = {};\r\n  const userConfig = getUserConfig();\r\n  try {\r\n    await searchPath(rootPath, userConfig, \"root\", treeObj);\r\n    await fs.writeFile(\r\n      path.resolve(rootPath, OUTPUT_TREE_FILENAME),\r\n      `window.${WINDOW_TREE_KEY} = ` + JSON.stringify(treeObj, null, 2)\r\n    );\r\n    console.log(\"write-projectMaps.tree.js-success\");\r\n  } catch (error) {\r\n    console.log(\"write-projectMaps.tree.js-error\", error);\r\n  }\r\n};\r\n","// controller\r\nimport { cac } from \"cac\";\r\nimport { generateHtml } from \"./generateHtml\";\r\nimport { outputDefaultConfig, getUserFolderMaps } from \"./initConfig\";\r\n\r\nconst cli = cac(\"project-maps\");\r\n\r\n// 1. init config\r\ncli.command(\"init\").action(async () => {\r\n  console.log(\"call-init\");\r\n  outputDefaultConfig(__dirname).finally(() => {\r\n    process.exit(1);\r\n  });\r\n});\r\n\r\n//2. tree\r\ncli.command(\"tree\").action(async () => {\r\n  console.log(\"call-tree\");\r\n  getUserFolderMaps(__dirname).finally(() => {\r\n    process.exit(1);\r\n  });\r\n});\r\n\r\n// 3. generate html\r\ncli.command(\"generate\").action(async () => {\r\n  console.log(\"call-generate\");\r\n  generateHtml(__dirname).finally(() => {\r\n    process.exit(1);\r\n  });\r\n});\r\n\r\ncli.help();\r\ncli.version(require(\"../package.json\").version);\r\n\r\ncli.parse();\r\n","// 1. generate html file\r\nimport fs from \"fs/promises\";\r\nimport path from \"path\";\r\nimport { OUTPUT_HTML_FILENAME, OUTPUT_TREE_FILENAME } from \"./constants\";\r\n\r\nexport const generateHtml = async (outputPath: string) => {\r\n  console.log(\"hello\", __filename, __dirname);\r\n  const chartJsPath = path.relative(\r\n    __dirname,\r\n    __filename.replace(/mapcli\\.js/g, \"chart.js\")\r\n  );\r\n  console.log(\"chartJsPath\", chartJsPath);\r\n  const str = `\r\n  <!DOCTYPE html>\r\n  <html lang=\"en\">\r\n    <head>\r\n      <meta charset=\"UTF-8\" />\r\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n      <title>Project-Maps</title>\r\n      <style>\r\n        * {\r\n          padding: 0;\r\n          margin: 0;\r\n        }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <div style=\"width: 100vw; height: 100vh; display: flex\">\r\n        <div id=\"container\" style=\"flex: 1\"></div>\r\n      </div>\r\n      <script src=\"./${OUTPUT_TREE_FILENAME}\"></script>\r\n      <script src=\"./${chartJsPath}\"></script>\r\n    </body>\r\n  </html>\r\n\r\n  `;\r\n  // link chart.js url\r\n  try {\r\n    await fs.writeFile(path.resolve(outputPath, OUTPUT_HTML_FILENAME), str);\r\n    console.log(`write-${OUTPUT_HTML_FILENAME}.js-success`);\r\n  } catch (error) {\r\n    console.error(`write-${OUTPUT_HTML_FILENAME}.js-error`, error);\r\n  }\r\n};\r\n","{\n  \"name\": \"project-maps\",\n  \"version\": \"1.0.0\",\n  \"description\": \"visualize your project\",\n  \"bin\": \"dist/mapcli.js\",\n  \"files\": [\n    \"dist/\"\n  ],\n  \"engines\": {\n    \"node\": \">= 12\"\n  },\n  \"mapcli\": \"dist/mapcli.js\",\n  \"chart\": \"dist/chart.js\",\n  \"targets\": {\n    \"mapcli\": {\n      \"source\": \"src/main.ts\",\n      \"engines\": {\n        \"node\": \">= 12\"\n      }\n    },\n    \"chart\": {\n      \"source\": \"src/chart.ts\",\n      \"engines\": {\n        \"browsers\": \"> 0.5%, last 2 versions, not dead\"\n      }\n    }\n  },\n  \"scripts\": {\n    \"build\": \"parcel build\",\n    \"build:mapcli\": \"parcel build --target mapcli\",\n    \"build:chart\": \"parcel build --target chart\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/toSayNothing/project-maps.git\"\n  },\n  \"keywords\": [\n    \"visualize\",\n    \"project\",\n    \"maps\"\n  ],\n  \"author\": \"toSayNothing\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/toSayNothing/project-maps/issues\"\n  },\n  \"homepage\": \"https://github.com/toSayNothing/project-maps#readme\",\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.16.0\",\n    \"@babel/core\": \"^7.16.5\",\n    \"@babel/preset-env\": \"^7.16.5\",\n    \"@babel/preset-typescript\": \"^7.16.5\",\n    \"@parcel/packager-ts\": \"^2.0.1\",\n    \"@parcel/transformer-typescript-types\": \"^2.0.1\",\n    \"@types/node\": \"^17.0.4\",\n    \"parcel\": \"^2.0.1\",\n    \"parcel-reporter-static-files-copy\": \"^1.3.4\",\n    \"typescript\": \">=3.0.0\"\n  },\n  \"dependencies\": {\n    \"@antv/x6\": \"^1.29.1\",\n    \"cac\": \"^6.7.12\",\n    \"echarts\": \"^5.2.2\",\n    \"filesize\": \"^8.0.6\",\n    \"vscode-icons-js\": \"^11.6.1\"\n  },\n  \"staticFiles\": {\n    \"staticOutPath\": \"static\",\n    \"staticPath\": \"src/static\"\n  }\n}"],"names":["$ac7ae1c9484a7a03$export$c2f8e0cc249a8d8f","exclude","relativepathDesc","desc","collapsed","dist","$04f7d5832bf86cdb$var$getUserConfig","require","$parcel$interopDefault","$iFBcR$path","resolve","__dirname","error","console","$04f7d5832bf86cdb$var$searchPath","async","pathName","userConfig","parentName","obj","arr","$iFBcR$fspromises","readdir","filter","fileName","includes","Promise","all","map","ref","ref1","fullFileName","curRelativePath","relative","ref2","curDesc","ref3","curCollapsed","stat","isDir","isDirectory","_children","fullPath","relativePath","size","children","$04f7d5832bf86cdb$var$makeTreeDataItem","$iFBcR$filesize","$aba3736e51503699$var$cli","$iFBcR$cac","cac","command","action","log","outputPath","oldUserConfig","toWriteConfig","Set","concat","Object","keys","reduce","acc","cur","_cur","_cur1","assign","writeFile","JSON","stringify","err","$04f7d5832bf86cdb$export$c3d0bbd4266b09f","finally","process","exit","rootPath","treeObj","$04f7d5832bf86cdb$export$d870c5008247247b","__filename","chartJsPath","replace","str","$d8a34c7639164d7f$export$1c0705ddcb519475","help","module","exports","parse","version","parcelRequire"],"version":3,"file":"mapcli.js.map","sourceRoot":"../"}